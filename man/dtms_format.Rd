% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dtms_format.R
\name{dtms_format}
\alias{dtms_format}
\title{Reshape data to transition format}
\usage{
dtms_format(
  data,
  dtms = NULL,
  idvar = "id",
  timevar = "time",
  statevar = "state",
  fromvar = "from",
  tovar = "to",
  timestep = NULL,
  keepnames = F,
  verbose = T
)
}
\arguments{
\item{data}{Data frame in long format.}

\item{dtms}{DTMS (optional) object as created with `dtms`. Needed when argument 'timestep' is not specified. Default is NULL.}

\item{idvar}{Character (optional), name of variable in 'data' with unit identifier, default is 'id'.}

\item{timevar}{Character (optional), name of variable in 'data' with time scale, default is 'time'.}

\item{statevar}{Character (optional), name of variable in 'data' with state, default is 'state'.}

\item{fromvar}{Character (optional), name of variable in reshaped data with starting state, default is 'from'.}

\item{tovar}{Character (optional), name of variable in reshaped data with receiving state, default is 'to'.}

\item{timestep}{Numeric (optional), step length for time scale. Needed when argument 'dtms' is not specified. Default is NULL.}

\item{keepnames}{Logical, keep original names for id and time variable? Default is FALSE; i.e., not keeping original names.}

\item{verbose}{Logical, create output to console if variable names are changed? Default is TRUE.}
}
\value{
A data set reshaped to transition format
}
\description{
Takes a data frame in long format and reshapes it into transition format. #'
}
\examples{
# Define model
simple <- dtms(transient=c("A","B"),
absorbing="X",
time=0:20)
# Transiton format
estdata <- dtms_format(data=simpledata,
dtms=simple,
idvar="id",
timevar="time",
statevar="state")
}
